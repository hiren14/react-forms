{"version":3,"sources":["components/FormBuilder/constants.js","components/FormBuilder/elements/TextArea.jsx","components/FormBuilder/elements/NumberInput.jsx","components/FormBuilder/elements/TextField.jsx","components/FormBuilder/elements/RadioInput.jsx","components/FormBuilder/elements/DateInput.jsx","components/FormBuilder/elements/TimeInput.jsx","components/FormBuilder/Header.jsx","components/FormBuilder/index.jsx","App.js","index.js"],"names":["formEl","label","value","TextArea","item","handleValue","deleteEl","handleRequired","handleElType","duplicateElement","Paper","elevation","Box","sx","textAlign","transform","cursor","p","Grid","container","spacing","xs","TextField","defaultValue","variant","onBlur","e","id","fullWidth","required","placeholder","mb","disabled","multiline","rows","FormControl","InputLabel","Select","labelId","type","onChange","target","map","el","key","MenuItem","Divider","light","FormGroup","row","alignItems","Tooltip","title","aria-label","IconButton","onClick","ml","color","FormControlLabel","control","Switch","checked","name","NumberInput","TextFieldInput","RadioInput","addOption","handleOptionValues","deleteOption","options","length","opt","display","Button","console","log","data","uuid","createNewOption","DateInput","handleDate","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","date","newDate","renderInput","params","TimeInput","handleTime","TimePicker","time","newTime","Header","description","setTitle","setDescription","borderTop","FormBuilder","initVal","useState","setData","formData","setFormData","items","prevState","filter","val","elId","elType","elIdx","findIndex","newEl","newArr","elArray","index","slice","addAfter","newOption","objVal","dateVal","optionId","optionVal","newOptions","direction","justifyContent","md","renderItem","maxDepth","position","top","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e00ceed.chunk.js","sourcesContent":["export const formEl = [\r\n  {\r\n    label: \"Text\",\r\n    value: \"text\",\r\n  },\r\n  {\r\n    label: \"TextArea\",\r\n    value: \"textarea\",\r\n  },\r\n  {\r\n    label: \"Number\",\r\n    value: \"number\",\r\n  },\r\n  {\r\n    label: \"Radio\",\r\n    value: \"radio\",\r\n  },\r\n  {\r\n    label: \"Date\",\r\n    value: \"date\",\r\n  },\r\n  {\r\n    label: \"Time\",\r\n    value: \"time\",\r\n  }\r\n];\r\n","import {  Fragment } from \"react\";\r\n//Material UI Components\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n//Icons\r\nimport DragIndicatorIcon from \"@material-ui/icons/DragIndicator\";\r\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\n\r\n//Form Elements\r\nimport { formEl } from \"../constants\";\r\n\r\nconst TextArea = ({\r\n  item,\r\n  handleValue,\r\n  deleteEl,\r\n  handleRequired,\r\n  handleElType,\r\n  duplicateElement,\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      <Paper elevation={1}>\r\n        <Box sx={{ textAlign: \"center\" }}>\r\n          <DragIndicatorIcon\r\n            sx={{ transform: \"rotate(-90deg)\", cursor: \"all-scroll\" }}\r\n          />\r\n        </Box>\r\n        <Box sx={{ p: 3 }}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={9}>\r\n              <TextField\r\n                defaultValue={item.value}\r\n                variant=\"outlined\"\r\n                onBlur={(e) => handleValue(item.id, e)}\r\n                fullWidth\r\n                required={item.required}\r\n                placeholder=\"Textarea Label\"\r\n                sx={{ mb: 2 }}\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                placeholder=\"TextareaIInput Field\"\r\n                disabled\r\n                multiline\r\n                rows={3}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"el-type-label\">Type</InputLabel>\r\n                <Select\r\n                  labelId=\"el-type-label\"\r\n                  id=\"el-type\"\r\n                  label=\"Type\"\r\n                  value={item.type}\r\n                  onChange={(e) => handleElType(item.id, e.target.value)}\r\n                >\r\n                  {formEl &&\r\n                    formEl.map((el, key) => (\r\n                      <MenuItem key={key} value={el.value}>\r\n                        {el.label}\r\n                      </MenuItem>\r\n                    ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        <Divider light />\r\n        <FormGroup row sx={{ alignItems: \"center\" }}>\r\n          <Tooltip title=\"Delete Element\" aria-label=\"delete-element\">\r\n            <IconButton\r\n              aria-label=\"delete-element\"\r\n              onClick={() => deleteEl(item.id)}\r\n              sx={{ ml: 2 }}\r\n            >\r\n              <DeleteOutlineOutlinedIcon color=\"secondary\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Duplicate Element\" aria-label=\"duplicate-element\">\r\n            <IconButton\r\n              aria-label=\"duplicate-element\"\r\n              onClick={() => duplicateElement(item.id, item.type)}\r\n              sx={{ ml: 2 }}\r\n            >\r\n              <FileCopyIcon color=\"secondary\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={item.required}\r\n                onChange={() => handleRequired(item.id)}\r\n                name=\"required-field\"\r\n                color=\"secondary\"\r\n              />\r\n            }\r\n            label=\"Required\"\r\n            sx={{ ml: 2 }}\r\n          />\r\n        </FormGroup>\r\n      </Paper>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TextArea;\r\n","import {  Fragment } from \"react\";\r\n//Material UI Components\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n//Icons\r\nimport DragIndicatorIcon from \"@material-ui/icons/DragIndicator\";\r\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\n\r\n//Form Elements\r\nimport { formEl } from \"../constants\";\r\n\r\nconst NumberInput = ({\r\n  item,\r\n  handleValue,\r\n  deleteEl,\r\n  handleRequired,\r\n  handleElType,\r\n  duplicateElement,\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      <Paper elevation={1}>\r\n        <Box sx={{ textAlign: \"center\" }}>\r\n          <DragIndicatorIcon\r\n            sx={{ transform: \"rotate(-90deg)\", cursor: \"all-scroll\" }}\r\n          />\r\n        </Box>\r\n        <Box sx={{ p: 3 }}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={9}>\r\n              <TextField\r\n                defaultValue={item.value}\r\n                variant=\"outlined\"\r\n                onBlur={(e) => handleValue(item.id, e)}\r\n                fullWidth\r\n                required={item.required}\r\n                placeholder=\"Number Label\"\r\n                sx={{ mb: 2 }}\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                placeholder=\"Number Input Field\"\r\n                disabled\r\n                type=\"number\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"el-type-label\">Type</InputLabel>\r\n                <Select\r\n                  labelId=\"el-type-label\"\r\n                  id=\"el-type\"\r\n                  label=\"Type\"\r\n                  value={item.type}\r\n                  onChange={(e) => handleElType(item.id, e.target.value)}\r\n                >\r\n                  {formEl &&\r\n                    formEl.map((el, key) => (\r\n                      <MenuItem key={key} value={el.value}>\r\n                        {el.label}\r\n                      </MenuItem>\r\n                    ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        <Divider light />\r\n        <FormGroup row sx={{ alignItems: \"center\" }}>\r\n          <Tooltip title=\"Delete Element\" aria-label=\"delete-element\">\r\n            <IconButton\r\n              aria-label=\"delete-element\"\r\n              onClick={() => deleteEl(item.id)}\r\n              sx={{ ml: 2 }}\r\n            >\r\n              <DeleteOutlineOutlinedIcon color=\"secondary\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Duplicate Element\" aria-label=\"duplicate-element\">\r\n            <IconButton\r\n              aria-label=\"duplicate-element\"\r\n              onClick={() => duplicateElement(item.id, item.type)}\r\n              sx={{ ml: 2 }}\r\n            >\r\n              <FileCopyIcon color=\"secondary\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={item.required}\r\n                onChange={() => handleRequired(item.id)}\r\n                name=\"required-field\"\r\n                color=\"secondary\"\r\n              />\r\n            }\r\n            label=\"Required\"\r\n            sx={{ ml: 2 }}\r\n          />\r\n        </FormGroup>\r\n      </Paper>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NumberInput;\r\n","import { useState, Fragment } from \"react\";\r\n//Material UI Components\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n//Icons\r\nimport DragIndicatorIcon from \"@material-ui/icons/DragIndicator\";\r\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\n\r\n//Form Elements\r\nimport { formEl } from \"../constants\";\r\n\r\nconst TextFieldInput = ({ item, handleValue, deleteEl, handleRequired, handleElType,duplicateElement }) => {\r\n  return (\r\n    <Fragment>\r\n      <Paper elevation={1}>\r\n        <Box sx={{ textAlign: \"center\" }}>\r\n          <DragIndicatorIcon\r\n            sx={{ transform: \"rotate(-90deg)\", cursor: \"all-scroll\" }}\r\n          />\r\n        </Box>\r\n        <Box sx={{ p: 3 }}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={9}>\r\n              <TextField\r\n                value={item.value}\r\n                variant=\"outlined\"\r\n                onChange={(e) => handleValue(item.id, e)}\r\n                fullWidth\r\n                required={item.required}\r\n                placeholder=\"Textfield Label\"\r\n                sx={{ mb: 2 }}\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                placeholder=\"Textfield Input Field\"\r\n                disabled\r\n              />\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"el-type-label\">Type</InputLabel>\r\n                <Select\r\n                  labelId=\"el-type-label\"\r\n                  id=\"el-type\"\r\n                  label=\"Type\"\r\n                  value={item.type}\r\n                  onChange={(e)=>handleElType(item.id,e.target.value)}\r\n                >\r\n                  {formEl &&\r\n                    formEl.map((el, key) => (\r\n                      <MenuItem key={key} value={el.value}>\r\n                        {el.label}\r\n                      </MenuItem>\r\n                    ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        <Divider light />\r\n        <FormGroup row sx={{ alignItems: \"center\" }}>\r\n          <Tooltip title=\"Delete Element\" aria-label=\"delete-element\">\r\n            <IconButton\r\n              aria-label=\"delete-element\"\r\n              onClick={() => deleteEl(item.id)}\r\n              sx={{ ml: 2 }}\r\n            >\r\n              <DeleteOutlineOutlinedIcon color=\"secondary\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Duplicate Element\" aria-label=\"duplicate-element\">\r\n            <IconButton\r\n              aria-label=\"duplicate-element\"\r\n              onClick={() => duplicateElement(item.id, item.type)}\r\n              sx={{ ml: 2 }}\r\n            >\r\n              <FileCopyIcon color=\"secondary\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={item.required}\r\n                onChange={() => handleRequired(item.id)}\r\n                name=\"required-field\"\r\n                color=\"secondary\"\r\n              />\r\n            }\r\n            label=\"Required\"\r\n            sx={{ ml: 2 }}\r\n          />\r\n        </FormGroup>\r\n      </Paper>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TextFieldInput;\r\n","import {  Fragment } from \"react\";\r\nimport uuid from \"react-uuid\";\r\n//Material UI Components\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n//Icons\r\nimport DragIndicatorIcon from \"@material-ui/icons/DragIndicator\";\r\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\n\r\n//Form Elements\r\nimport { formEl } from \"../constants\";\r\n\r\nconst RadioInput = ({\r\n  item,\r\n  handleValue,\r\n  deleteEl,\r\n  handleRequired,\r\n  handleElType,\r\n  addOption,\r\n  handleOptionValues,\r\n  deleteOption,\r\n  duplicateElement\r\n}) => {\r\n\r\n  //Create new option\r\n  const createNewOption = (id) => {\r\n    console.log(id,typeof(id),\"this is id\")\r\n    const data = {\r\n      id: uuid(),\r\n      value: \"\",\r\n    };\r\n    addOption(id, data);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Paper elevation={1}>\r\n        <Box sx={{ textAlign: \"center\" }}>\r\n          <DragIndicatorIcon\r\n            sx={{ transform: \"rotate(-90deg)\", cursor: \"all-scroll\" }}\r\n          />\r\n        </Box>\r\n        <Box sx={{ p: 3 }}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={9}>\r\n              <TextField\r\n                defaultValue={item.value}\r\n                variant=\"outlined\"\r\n                onBlur={(e) => handleValue(item.id, e)}\r\n                fullWidth\r\n                required={item.required}\r\n                placeholder=\"Radio Label\"\r\n                sx={{ mb: 2 }}\r\n              />\r\n              {item.options &&\r\n                item.options.length > 0 &&\r\n                item.options.map((opt, key) => (\r\n                  <Box sx={{display:'flex'}}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      placeholder={`Radio Option ${key + 1}`}\r\n                      defaultValue={opt?.value}\r\n                      key={opt?.id}\r\n                      sx={{ mb: 1 }}\r\n                      onBlur={(e) =>\r\n                        handleOptionValues(item?.id, opt?.id, e.target.value)\r\n                      }\r\n                    />\r\n                    <Tooltip title=\"Delete Option\" aria-label=\"delete-option\">\r\n                      <IconButton\r\n                        aria-label=\"delete-option\"\r\n                        onClick={() => deleteOption(item.id,opt?.id)}\r\n                        sx={{ ml: 2 }}\r\n                      >\r\n                        <DeleteOutlineOutlinedIcon color=\"secondary\" />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  </Box>\r\n                ))}\r\n              <Button variant=\"text\" onClick={() => createNewOption(item.id)}>\r\n                Add Option\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"el-type-label\">Type</InputLabel>\r\n                <Select\r\n                  labelId=\"el-type-label\"\r\n                  id=\"el-type\"\r\n                  label=\"Type\"\r\n                  value={item.type}\r\n                  onChange={(e) => handleElType(item.id, e.target.value)}\r\n                >\r\n                  {formEl &&\r\n                    formEl.map((el, key) => (\r\n                      <MenuItem key={key} value={el.value}>\r\n                        {el.label}\r\n                      </MenuItem>\r\n                    ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        <Divider light />\r\n        <FormGroup row sx={{ alignItems: \"center\" }}>\r\n          <Tooltip title=\"Delete Element\" aria-label=\"delete-element\">\r\n            <IconButton\r\n              aria-label=\"delete-element\"\r\n              onClick={() => deleteEl(item.id)}\r\n              sx={{ ml: 2 }}\r\n            >\r\n              <DeleteOutlineOutlinedIcon color=\"secondary\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Duplicate Element\" aria-label=\"duplicate-element\">\r\n            <IconButton\r\n              aria-label=\"duplicate-element\"\r\n              onClick={() => duplicateElement(item.id,item.type)}\r\n              sx={{ ml: 2 }}\r\n            >\r\n              <FileCopyIcon color=\"secondary\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={item.required}\r\n                onChange={() => handleRequired(item.id)}\r\n                name=\"required-field\"\r\n                color=\"secondary\"\r\n              />\r\n            }\r\n            label=\"Required\"\r\n            sx={{ ml: 2 }}\r\n          />\r\n        </FormGroup>\r\n      </Paper>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RadioInput;\r\n","import { Fragment } from \"react\";\r\n//Material UI Components\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport AdapterDateFns from \"@material-ui/lab/AdapterDateFns\";\r\nimport LocalizationProvider from \"@material-ui/lab/LocalizationProvider\";\r\nimport DatePicker from \"@material-ui/lab/DatePicker\";\r\n//Icons\r\nimport DragIndicatorIcon from \"@material-ui/icons/DragIndicator\";\r\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\n\r\n//Form Elements\r\nimport { formEl } from \"../constants\";\r\n\r\nconst DateInput = ({\r\n  item,\r\n  handleValue,\r\n  deleteEl,\r\n  handleRequired,\r\n  handleElType,\r\n  handleDate,\r\n  duplicateElement\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      <Paper elevation={1}>\r\n        <Box sx={{ textAlign: \"center\" }}>\r\n          <DragIndicatorIcon\r\n            sx={{ transform: \"rotate(-90deg)\", cursor: \"all-scroll\" }}\r\n          />\r\n        </Box>\r\n        <Box sx={{ p: 3 }}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={9}>\r\n              <TextField\r\n                defaultValue={item.value}\r\n                variant=\"outlined\"\r\n                onBlur={(e) => handleValue(item.id, e)}\r\n                fullWidth\r\n                required={item.required}\r\n                placeholder=\"Date Label\"\r\n                sx={{ mb: 2 }}\r\n              />\r\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                <DatePicker\r\n                  label=\"Select Date\"\r\n                  value={item?.date}\r\n                  onChange={(newDate) => {handleDate(item.id,newDate);}}\r\n                  renderInput={(params) => <TextField fullWidth {...params} />}\r\n                />\r\n              </LocalizationProvider>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"el-type-label\">Type</InputLabel>\r\n                <Select\r\n                  labelId=\"el-type-label\"\r\n                  id=\"el-type\"\r\n                  label=\"Type\"\r\n                  value={item.type}\r\n                  onChange={(e) => handleElType(item.id, e.target.value)}\r\n                >\r\n                  {formEl &&\r\n                    formEl.map((el, key) => (\r\n                      <MenuItem key={key} value={el.value}>\r\n                        {el.label}\r\n                      </MenuItem>\r\n                    ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        <Divider light />\r\n        <FormGroup row sx={{ alignItems: \"center\" }}>\r\n          <Tooltip title=\"Delete Element\" aria-label=\"delete-element\">\r\n            <IconButton\r\n              aria-label=\"delete-element\"\r\n              onClick={() => deleteEl(item.id)}\r\n              sx={{ ml: 2 }}\r\n            >\r\n              <DeleteOutlineOutlinedIcon color=\"secondary\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Duplicate Element\" aria-label=\"duplicate-element\">\r\n            <IconButton\r\n              aria-label=\"duplicate-element\"\r\n              onClick={() => duplicateElement(item.id,item.type)}\r\n              sx={{ ml: 2 }}\r\n            >\r\n              <FileCopyIcon color=\"secondary\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={item.required}\r\n                onChange={() => handleRequired(item.id)}\r\n                name=\"required-field\"\r\n                color=\"secondary\"\r\n              />\r\n            }\r\n            label=\"Required\"\r\n            sx={{ ml: 2 }}\r\n          />\r\n        </FormGroup>\r\n      </Paper>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default DateInput;\r\n","import { Fragment } from \"react\";\r\n//Material UI Components\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport AdapterDateFns from \"@material-ui/lab/AdapterDateFns\";\r\nimport LocalizationProvider from \"@material-ui/lab/LocalizationProvider\";\r\nimport TimePicker from \"@material-ui/lab/TimePicker\";\r\n//Icons\r\nimport DragIndicatorIcon from \"@material-ui/icons/DragIndicator\";\r\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\n\r\n//Form Elements\r\nimport { formEl } from \"../constants\";\r\n\r\nconst TimeInput = ({\r\n  item,\r\n  handleValue,\r\n  deleteEl,\r\n  handleRequired,\r\n  handleElType,\r\n  handleTime,\r\n  duplicateElement\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      <Paper elevation={1}>\r\n        <Box sx={{ textAlign: \"center\" }}>\r\n          <DragIndicatorIcon\r\n            sx={{ transform: \"rotate(-90deg)\", cursor: \"all-scroll\" }}\r\n          />\r\n        </Box>\r\n        <Box sx={{ p: 3 }}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={9}>\r\n              <TextField\r\n                defaultValue={item.value}\r\n                variant=\"outlined\"\r\n                onBlur={(e) => handleValue(item.id, e)}\r\n                fullWidth\r\n                required={item.required}\r\n                placeholder=\"Time Label\"\r\n                sx={{ mb: 2 }}\r\n              />\r\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                <TimePicker\r\n                  label=\"Pick Time\"\r\n                  value={item?.time}\r\n                  onChange={(newTime) => handleTime(item.id, newTime)}\r\n                  renderInput={(params) => <TextField fullWidth {...params} />}\r\n                />\r\n              </LocalizationProvider>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"el-type-label\">Type</InputLabel>\r\n                <Select\r\n                  labelId=\"el-type-label\"\r\n                  id=\"el-type\"\r\n                  label=\"Type\"\r\n                  value={item.type}\r\n                  onChange={(e) => handleElType(item.id, e.target.value)}\r\n                >\r\n                  {formEl &&\r\n                    formEl.map((el, key) => (\r\n                      <MenuItem key={key} value={el.value}>\r\n                        {el.label}\r\n                      </MenuItem>\r\n                    ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        <Divider light />\r\n        <FormGroup row sx={{ alignItems: \"center\" }}>\r\n          <Tooltip title=\"Delete Element\" aria-label=\"delete-element\">\r\n            <IconButton\r\n              aria-label=\"delete-element\"\r\n              onClick={() => deleteEl(item.id)}\r\n              sx={{ ml: 2 }}\r\n            >\r\n              <DeleteOutlineOutlinedIcon color=\"secondary\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Duplicate Element\" aria-label=\"duplicate-element\">\r\n            <IconButton\r\n              aria-label=\"duplicate-element\"\r\n              onClick={() => duplicateElement(item.id,item.type)}\r\n              sx={{ ml: 2 }}\r\n            >\r\n              <FileCopyIcon color=\"secondary\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={item.required}\r\n                onChange={() => handleRequired(item.id)}\r\n                name=\"required-field\"\r\n                color=\"secondary\"\r\n              />\r\n            }\r\n            label=\"Required\"\r\n            sx={{ ml: 2 }}\r\n          />\r\n        </FormGroup>\r\n      </Paper>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TimeInput;\r\n","import { Fragment, useState } from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst Header = ({ title, description, setTitle, setDescription }) => {\r\n  return (\r\n    <Fragment>\r\n      <Box sx={{ mb: 3 }}>\r\n        <Paper elevation={2} sx={{ p: 3, borderTop: \"8px solid #9C27B0\" }}>\r\n          <TextField\r\n            defaultValue={title}\r\n            onBlur={(e) => setTitle(e.target.value)}\r\n            variant=\"standard\"\r\n            placeholder=\"Form Title\"\r\n            name=\"title\"\r\n            sx={{ mb: 3 }}\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            name=\"description\"\r\n            defaultValue={description}\r\n            onBlur={(e) => setDescription(e.target.value)}\r\n            variant=\"standard\"\r\n            placeholder=\"Form Description\"\r\n            fullWidth\r\n            sx={{ mb: 2 }}\r\n            multiline\r\n            rows={2}\r\n          />\r\n        </Paper>\r\n      </Box>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { Fragment, useState } from \"react\";\r\nimport uuid from \"react-uuid\";\r\nimport Nestable from \"react-nestable\";\r\n//Material UI Components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n//Icons\r\nimport AddCircleOutlineOutlinedIcon from \"@material-ui/icons/AddCircleOutlineOutlined\";\r\n//Form Elements\r\nimport {\r\n  TextFieldInput,\r\n  TextArea,\r\n  NumberInput,\r\n  RadioInput,\r\n  DateInput,\r\n  TimeInput,\r\n} from \"./elements\";\r\nimport Layout from './elements/layout'\r\nimport { formEl } from \"./constants.js\";\r\n//Components\r\nimport Header from \"./Header\";\r\n\r\nconst FormBuilder = () => {\r\n  const initVal = formEl[0]?.value;\r\n\r\n  //State\r\n  const [title, setTitle] = useState(\"Untitled Form\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [data, setData] = useState([]);\r\n  const [formData, setFormData] = useState(\"text\");\r\n\r\n  const items = data;\r\n\r\n  //Function to add new element\r\n  const addElement = () => {\r\n    const data = {\r\n      id: uuid(),\r\n      value: null,\r\n      type: formData,\r\n      required: false,\r\n    };\r\n    setData((prevState) => [...prevState, data]);\r\n    setFormData(initVal);\r\n  };\r\n\r\n  //Function to delete element\r\n  const deleteEl = (id) => {\r\n    setData((prevState) => prevState.filter((val) => val.id !== id));\r\n  };\r\n\r\n  //Function to add element at specific pos and return arr\r\n  const addAfter = (elArray, index, newEl) => {\r\n    return [...elArray.slice(0, index+1), newEl, ...elArray.slice(index+1)];\r\n  };\r\n\r\n  //Function to duplicate element\r\n  const duplicateElement = (elId, elType) => {\r\n    let elIdx = data.findIndex( (el) =>el.id === elId);\r\n    let newEl = {\r\n      id: uuid(),\r\n      value: null,\r\n      type: elType,\r\n      required: false,\r\n    }\r\n    let newArr = addAfter(data,elIdx,newEl)\r\n    setData(newArr)\r\n  };\r\n\r\n  //Function to handle sorting of elements\r\n  const handleOnChangeSort = ({ items }) => {\r\n    setData(items);\r\n  };\r\n\r\n  //Function to Handle Input Values\r\n  const handleValue = (id, e) => {\r\n    let newArr = data.map((el) => {\r\n      if (el.id == id) {\r\n        return { ...el, value: e.target.value };\r\n      } else {\r\n        return el;\r\n      }\r\n    });\r\n    setData(newArr);\r\n  };\r\n\r\n  //Function to Handle Required\r\n  const handleRequired = (id) => {\r\n    let newArr = data.map((el) => {\r\n      if (el.id == id) {\r\n        return { ...el, required: !el.required };\r\n      } else {\r\n        return el;\r\n      }\r\n    });\r\n    setData(newArr);\r\n  };\r\n\r\n  //Function to Handle Element Type\r\n  const handleElType = (id, type) => {\r\n    let newArr = data.map((el) => {\r\n      if (el.id == id) {\r\n        return { ...el, type: type };\r\n      } else {\r\n        return el;\r\n      }\r\n    });\r\n    setData(newArr);\r\n  };\r\n\r\n  //Function to Handle Options\r\n  const addOption = (id, newOption) => {\r\n    let newArr = data.map((el) => {\r\n      if (el.id == id) {\r\n        const objVal = \"options\" in el ? el?.options : [];\r\n        return { ...el, options: [...objVal, newOption] };\r\n      } else {\r\n        return el;\r\n      }\r\n    });\r\n    setData(newArr);\r\n  };\r\n\r\n  //Function to Handle Date\r\n  const handleDate = (id, dateVal) => {\r\n    let newArr = data.map((el) => {\r\n      if (el.id == id) {\r\n        return { ...el, date: dateVal };\r\n      } else {\r\n        return el;\r\n      }\r\n    });\r\n    setData(newArr);\r\n  };\r\n\r\n  //Function to Handle Time\r\n  const handleTime = (id, dateVal) => {\r\n    let newArr = data.map((el) => {\r\n      if (el.id == id) {\r\n        return { ...el, time: dateVal };\r\n      } else {\r\n        return el;\r\n      }\r\n    });\r\n    setData(newArr);\r\n  };\r\n\r\n  //Function to Change Option Values\r\n  const handleOptionValues = (elId, optionId, optionVal) => {\r\n    let newArr = data.map((el) => {\r\n      if (el.id == elId) {\r\n        el?.options &&\r\n          el?.options.map((opt) => {\r\n            if (opt.id == optionId) {\r\n              opt.value = optionVal;\r\n            }\r\n          });\r\n        return el;\r\n      } else {\r\n        return el;\r\n      }\r\n    });\r\n    setData(newArr);\r\n  };\r\n\r\n  //Function to Delete Optin\r\n  const deleteOption = (elId, optionId) => {\r\n    let newArr = data.map((el) => {\r\n      if (el.id == elId) {\r\n        let newOptions =\r\n          el?.options && el?.options.filter((opt) => opt.id != optionId);\r\n        return { ...el, options: newOptions };\r\n      } else {\r\n        return el;\r\n      }\r\n    });\r\n    setData(newArr);\r\n  };\r\n\r\n  //Render items\r\n  const renderElements = ({ item }) => {\r\n    switch (item.type) {\r\n      case \"text\":\r\n        return (\r\n          <TextFieldInput\r\n            item={item}\r\n            handleValue={handleValue}\r\n            deleteEl={deleteEl}\r\n            handleRequired={handleRequired}\r\n            handleElType={handleElType}\r\n            duplicateElement={duplicateElement}\r\n          />\r\n        );\r\n      case \"textarea\":\r\n        return (\r\n          <TextArea\r\n            item={item}\r\n            handleValue={handleValue}\r\n            deleteEl={deleteEl}\r\n            handleRequired={handleRequired}\r\n            handleElType={handleElType}\r\n            duplicateElement={duplicateElement}\r\n          />\r\n        );\r\n      case \"number\":\r\n        return (\r\n          <NumberInput\r\n            item={item}\r\n            handleValue={handleValue}\r\n            deleteEl={deleteEl}\r\n            handleRequired={handleRequired}\r\n            handleElType={handleElType}\r\n            duplicateElement={duplicateElement}\r\n          />\r\n        );\r\n      case \"radio\":\r\n        return (\r\n          <RadioInput\r\n            item={item}\r\n            handleValue={handleValue}\r\n            deleteEl={deleteEl}\r\n            handleRequired={handleRequired}\r\n            handleElType={handleElType}\r\n            addOption={addOption}\r\n            handleOptionValues={handleOptionValues}\r\n            deleteOption={deleteOption}\r\n            duplicateElement={duplicateElement}\r\n          />\r\n        );\r\n      case \"date\":\r\n        return (\r\n          <DateInput\r\n            item={item}\r\n            handleValue={handleValue}\r\n            deleteEl={deleteEl}\r\n            handleRequired={handleRequired}\r\n            handleElType={handleElType}\r\n            handleDate={handleDate}\r\n            duplicateElement={duplicateElement}\r\n          />\r\n        );\r\n      case \"time\":\r\n        return (\r\n          <TimeInput\r\n            item={item}\r\n            handleValue={handleValue}\r\n            deleteEl={deleteEl}\r\n            handleRequired={handleRequired}\r\n            handleElType={handleElType}\r\n            handleTime={handleTime}\r\n            duplicateElement={duplicateElement}\r\n          />\r\n        );\r\n      default:\r\n        return <Fragment></Fragment>;\r\n    }\r\n  };\r\n\r\n  console.log(data);\r\n  console.log(\" \")\r\n  return (\r\n    <Fragment>\r\n      <Grid container spacing={1} direction=\"row\" justifyContent=\"center\">\r\n        <Grid item md={6}>\r\n          <Header\r\n            title={title}\r\n            setTitle={setTitle}\r\n            description={description}\r\n            setDescription={setDescription}\r\n          />\r\n          <Nestable\r\n            items={items}\r\n            renderItem={renderElements}\r\n            maxDepth={1}\r\n            onChange={handleOnChangeSort}\r\n          />\r\n        </Grid>\r\n        <Grid item md={1}>\r\n          <Tooltip title=\"Add Element\" aria-label=\"add-element\">\r\n            <IconButton\r\n              aria-label=\"add-element\"\r\n              onClick={addElement}\r\n              sx={{ position: \"sticky\", top: 30 }}\r\n            >\r\n              <AddCircleOutlineOutlinedIcon color=\"secondary\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Grid>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default FormBuilder;\r\n","import { Fragment } from \"react\";\r\nimport FormBuilder from \"@components/FormBuilder\";\r\nimport \"react-nestable/dist/styles/index.css\";\r\nconst App = () => {\r\n  return (\r\n    <Fragment>\r\n        <FormBuilder />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}